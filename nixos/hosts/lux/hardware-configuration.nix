# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/e7936fa3-7f71-4593-942a-5ca0187cd599";
      fsType = "ext4";
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/40FB-E015";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };
    "/mnt/astore" = {
      device = "/dev/disk/by-uuid/2ea991dc-cf75-421d-8f1e-2df130645e43";
      fsType = "ext4";
    };
    "/mnt/extra" = {
      device = "/dev/disk/by-uuid/63979a69-2d7f-4f09-8a8f-6c2b6b9a26bf";
      fsType = "ext4";
    };
    "/mnt/share" = {
      device = "/dev/disk/by-uuid/57128f71-a084-4239-8bec-61f6113c8ebb";
      fsType = "ext4";
    };
  };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/718cb90b-1744-4e02-853c-6ba26ffd4289"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
